# Generated by Django 5.1.5 on 2025-02-04 15:12

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Categorie',
            fields=[
                ('idCategorie', models.IntegerField(db_column='idCategorie', primary_key=True, serialize=False)),
                ('nomCategorie', models.CharField(db_column='nomCategorie', max_length=25)),
            ],
            options={
                'db_table': 'categorie',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Etudiant',
            fields=[
                ('idEtudiant', models.IntegerField(db_column='idEtudiant', primary_key=True, serialize=False)),
                ('nomEtudiant', models.CharField(db_column='nomEtudiant', max_length=50)),
                ('prenomEtudiant', models.CharField(db_column='prenomEtudiant', max_length=45)),
            ],
            options={
                'db_table': 'etudiant',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Fournisseur',
            fields=[
                ('idFournisseur', models.CharField(db_column='idFournisseur', max_length=5, primary_key=True, serialize=False)),
                ('nomFournisseur', models.CharField(db_column='nomFournisseur', max_length=45)),
                ('contact', models.CharField(max_length=55)),
                ('dateAjout', models.DateTimeField(blank=True, db_column='dateAjout', null=True)),
            ],
            options={
                'db_table': 'fournisseur',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GestionTickets',
            fields=[
                ('idGestionTickets', models.BigAutoField(db_column='idGestionTickets', primary_key=True, serialize=False)),
                ('nbreTicketVendu', models.IntegerField(db_column='nbreTicketVendu')),
                ('nbreTicketRestant', models.IntegerField(db_column='nbreTicketRestant')),
                ('dateGestionTicket', models.DateField(db_column='dategestionTicket')),
                ('argentARemettre', models.FloatField(db_column='argentARemettre')),
                ('argentRemis', models.FloatField(db_column='argentRemis')),
            ],
            options={
                'db_table': 'gestion_tickets',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Jour',
            fields=[
                ('idJour', models.IntegerField(db_column='idJour', primary_key=True, serialize=False)),
                ('nomJour', models.CharField(db_column='nomJour', max_length=10)),
            ],
            options={
                'db_table': 'jour',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LotsTicket',
            fields=[
                ('idLots', models.BigAutoField(db_column='idLots', primary_key=True, serialize=False)),
                ('typeLot', models.CharField(blank=True, db_column='typeLot', max_length=20, null=True)),
                ('nbreTickets', models.IntegerField(db_column='nbreTickets')),
                ('prixLot', models.BigIntegerField(db_column='prixLot')),
                ('dateCreation', models.DateTimeField(blank=True, db_column='dateCreation', null=True)),
            ],
            options={
                'db_table': 'lots_ticket',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Periode',
            fields=[
                ('idPeriode', models.IntegerField(db_column='idPeriode', primary_key=True, serialize=False)),
                ('nomPeriode', models.CharField(db_column='nomPeriode', max_length=10)),
            ],
            options={
                'db_table': 'periode',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Produit',
            fields=[
                ('idProduit', models.CharField(db_column='idProduit', max_length=5, primary_key=True, serialize=False)),
                ('nomProduit', models.CharField(db_column='nomProduit', max_length=25)),
                ('quantiteDisponible', models.DecimalField(db_column='quantiteDisponible', decimal_places=2, max_digits=10)),
                ('seuilCritique', models.DecimalField(db_column='seuilCritique', decimal_places=2, max_digits=10)),
                ('ration', models.FloatField(blank=True, null=True)),
                ('etat', models.CharField(default='Disponible', max_length=10)),
                ('dateAjout', models.DateTimeField(blank=True, db_column='dateAjout', null=True)),
            ],
            options={
                'db_table': 'produit',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Rapport',
            fields=[
                ('idRapport', models.BigAutoField(db_column='idRapport', primary_key=True, serialize=False)),
                ('fichier', models.CharField(blank=True, max_length=255, null=True)),
                ('dateRapport', models.DateTimeField(db_column='dateRapport')),
            ],
            options={
                'db_table': 'rapport',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Recu',
            fields=[
                ('idRecu', models.BigAutoField(db_column='idRecu', primary_key=True, serialize=False)),
                ('dateRecu', models.DateField(db_column='dateRecu')),
                ('quantite', models.DecimalField(db_column='quantite', decimal_places=2, max_digits=10)),
            ],
            options={
                'db_table': 'recu',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('idReservation', models.BigAutoField(db_column='idReservation', primary_key=True, serialize=False)),
                ('dateReservation', models.DateField(db_column='dateReservation')),
            ],
            options={
                'db_table': 'reservation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('idStock', models.IntegerField(db_column='idStock', primary_key=True, serialize=False)),
                ('dateStock', models.DateField(db_column='dateStock')),
            ],
            options={
                'db_table': 'stock',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('idTicket', models.IntegerField(db_column='idTicket', primary_key=True, serialize=False)),
                ('prixTicket', models.IntegerField(db_column='prixTicket')),
            ],
            options={
                'db_table': 'ticket',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TypeRapport',
            fields=[
                ('idTypeRapport', models.BigAutoField(db_column='idTypeRapport', primary_key=True, serialize=False)),
                ('nomTypeRapport', models.CharField(db_column='nomTypeRapport', max_length=25)),
            ],
            options={
                'db_table': 'typeRapport',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Utilisateur',
            fields=[
                ('idUtilisateur', models.AutoField(db_column='idUtilisateur', primary_key=True, serialize=False)),
                ('nom', models.CharField(blank=True, max_length=20, null=True)),
                ('prenom', models.CharField(max_length=20)),
                ('password', models.CharField(db_column='motPasse', max_length=255)),
                ('email', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('telephone', models.CharField(max_length=25, unique=True)),
                ('role', models.CharField(max_length=19)),
                ('last_login', models.DateTimeField(blank=True, db_column='dateCreation', null=True)),
            ],
            options={
                'db_table': 'utilisateur',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ArgentRemis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('montant', models.IntegerField()),
                ('date', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Lot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_lot', models.CharField(choices=[('Déjeuner', 'Déjeuner'), ('Petit-déjeuner', 'Petit-déjeuner')], max_length=20)),
                ('nombre_lot', models.IntegerField()),
                ('montant', models.IntegerField(editable=False)),
                ('date', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='TicketVendu',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_ticket', models.CharField(choices=[('Petit-déjeuner', 'Petit-déjeuner'), ('Déjeuner', 'Déjeuner')], max_length=20)),
                ('nombre_ticket', models.IntegerField()),
                ('date', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='MouvementStock',
            fields=[
                ('idMouvement', models.BigAutoField(db_column='idMouvement', primary_key=True, serialize=False)),
                ('quantite', models.DecimalField(decimal_places=2, max_digits=10)),
                ('dateMouvement', models.DateField(db_column='datemouvement')),
                ('estSortie', models.BooleanField()),
                ('idJour', models.ForeignKey(db_column='idJour', on_delete=django.db.models.deletion.DO_NOTHING, to='restoapp.jour')),
                ('idProduit', models.ForeignKey(db_column='idProduit', on_delete=django.db.models.deletion.DO_NOTHING, to='restoapp.produit')),
                ('idRapport', models.ForeignKey(db_column='idRapport', on_delete=django.db.models.deletion.DO_NOTHING, to='restoapp.rapport')),
            ],
            options={
                'db_table': 'mouvement_stock',
            },
        ),
    ]
